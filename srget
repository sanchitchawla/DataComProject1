#! /usr/bin/python

import socket as soc
from urlparse import urlparse
import sys
import os

def downloadrqt(host,path):
	return "GET " + path + " HTTP/1.1\r\n" + "Host: " + host + "\r\n\r\n"

def HEADrqt(host,path):
	return "HEAD " + path + " HTTP/1.1\r\n" + "Host: " + host + "\r\n\r\n"

def conteenew(host,path,byte):
	return ("GET {n} HTTP/1.1\r\n"+ "Host: {s}\r\n"+"Connection: close\r\n"+"Range: {b}\r\n").format(n=path,s=host,b=byte)
 		
def myreceive(file, sock,MSGLEN,name,bytes_recd):
	chunks = []
	while bytes_recd < MSGLEN:
		chunk = sock.recv(min(MSGLEN - bytes_recd, 2048))
		bytes_recd += len(chunk)
		file.write(chunk)	

def getmeeverything(text,h):
	mydic={}
	i=text.find("\r\n\r\n")
	header = text[:i]
	body=text[i+4:]
	eachhead=header.split("\r\n")

	if not "200" in eachhead[0]:
		print "Sorry! We caught an error!"
		sys.exit(2)

	for each in eachhead[1:]:
		hm=each.split(": ")
		h.write(each+"\r\n")
		mydic[hm[0]]= hm[1]
	return mydic,body

def getmeeverythingg(text):
	mydic={}
	i=text.find("\r\n\r\n")
	header = text[:i]
	body=text[i+4:]
	eachhead=header.split("\r\n")

	if not "200" in eachhead[0]:
		print "Sorry! We caught an error!"
		sys.exit(2)

	for each in eachhead[1:]:
		hm=each.split(": ")
		mydic[hm[0]]= hm[1]
	return mydic,body

def downloadpls(HOST,PORT,PATH,name):
	fname,extension= name.split(".")
	with open(fname+ "sanchit","wb+") as file:
		with open("meta.txt","wb+") as h:
			clientSocket = soc.socket(soc.AF_INET, soc.SOCK_STREAM)
			clientSocket.connect((HOST,PORT))
			header = downloadrqt(HOST,PATH)
			clientSocket.send(header)
			text = "" 
			while True:
				res = clientSocket.recv(1024)	
				text += res
				if "\r\n\r\n" in text:
					mydic ,body= getmeeverything(text,h)
					file.write(body)
					length= int(mydic["Content-Length"])
					myreceive(file, clientSocket, long(length), name, long(len(body)))
					clientSocket.close()
					break	
			os.rename(fname+"sanchit", fname + "." + extension)
			os.remove("meta.txt")
	

def resumedownload(HOST,PORT,PATH,name):
	fname,extension= name.split(".")
	clientSocket = soc.socket(soc.AF_INET, soc.SOCK_STREAM)
	clientSocket.connect((HOST,PORT))
	header = HEADrqt(HOST,PATH)	
	clientSocket.send(header)
	text=""

	while True:
		res = clientSocket.recv(1024)	
		text += res
		if "\r\n\r\n" in text:
			mydic ,body= getmeeverythingg(text)
			length= int(mydic["Content-Length"])
			Etag= mydic["ETag"]
			Last= mydic["Last-Modified"]
			clientSocket.close()
			break
	
	clientSocket = soc.socket(soc.AF_INET, soc.SOCK_STREAM)
	clientSocket.connect((HOST,PORT))
	header = conteenew(HOST,PATH,length)	
	clientSocket.send(header)
	oldFile = fname+"sanchit"

	if os.path.isfile(oldFile):
		lst = []
        string = oldFile
        lst = string.split("\r\n")
        with open("meta.txt","r") as fffile:
			byte = fffile.readlines()
			hm,prevEtag= byte[-2].split(": ")
			hmm,prevLast= byte[-4].split(": ")
			print prevLast, Last
			print prevEtag, Etag

	writeout= open(name,"a+")

	if prevLast== Last or Etag==prevEtag:
		print "YES YES SEE ME PLS PLS PLS"
		try:
			while True:
				hmm = fname +"sanchit"
				res = clientSocket.recv(1024)
				writeout.write(res)
				if len(res)==0:
					directory = os.getcwd()
					os.remove(directory+"/" + hmm)
				elif not res:
					break
				clientSocket.close()
		except KeyboardInterrupt  as e:
			print e
			
	writeout.close()


if len(sys.argv) ==4 and sys.argv[1]== "-o":
	if "https" in sys.argv[-1]:
		print "Sorry we don't support https"	
		sys.exit(2)
	parseSTR = urlparse(sys.argv[-1])
	if parseSTR.port == None: PORT = 80
	else: PORT = parseSTR.port
	fileName=sys.argv[2]
	fname,extension= fileName.split(".")
	HOST = parseSTR.hostname
	PATH = parseSTR.path
	if PATH=="" or PATH== None:
		PATH="/"
	if os.path.isfile(fname+"sanchit"):
		resumedownload(HOST,PORT,PATH,fileName)
	else:
		downloadpls(HOST,PORT,PATH,fileName)
		
	#with open(fileName, "wb+") as file:
	#	file.write(text)
	
