#! /usr/bin/python

import socket as soc
from urlparse import urlparse
import sys
import os.path

def downloadrqt(host,path):
	return "GET " + path + " HTTP/1.1\r\n" + "Host: " + host + "\r\n\r\n"

def HEADrqt(host,path):
	return "HEAD " + path + " HTTP/1.1\r\n" + "Host: " + host + "\r\n\r\n"


def conteenew(host,path,byte):
	return ("GET {n} HTTP/1.1\r\n"+ "Host: {s}\r\n"+"Connection: close\r\n"+"Range: {b}\r\n").format(n=path,s=host,b=byte)

def myreceive(sock,MSGLEN):
    chunks = []
    bytes_recd = 0
    count=0
    while bytes_recd < MSGLEN:
        chunk = sock.recv(min(MSGLEN - bytes_recd, 2048))
        if chunk == '':
            raise RuntimeError("socket connection broken")
        chunks.append(chunk)
        bytes_recd +=len(chunk)
    return ''.join(chunks)

def getmeeverything(text):
	mydic={}
	header,body=text.split("\r\n\r\n")
	eachhead=header.split("\r\n")
	if not "200" in eachhead[0]:
		print "Sorry! We caught an error!"
		sys.exit(2)
	for each in eachhead[1:]:
		hm=each.split(": ")
		mydic[hm[0]]= hm[1]
	return mydic,body

def downloadpls(HOST,PORT,PATH):
	clientSocket = soc.socket(soc.AF_INET, soc.SOCK_STREAM)
	clientSocket.connect((HOST,PORT))
	header = downloadrqt(HOST,PATH)
	clientSocket.send(header)
	text = "" 
	cont_len=[]
	
	while True:
		res = clientSocket.recv(1024)	
		text += res
		if "\r\n\r\n" in text:
			mydic ,body= getmeeverything(text)
			length= int(mydic["Content-Length"])
			body+= myreceive(clientSocket,long(length)- long(len(body)))
			clientSocket.close()
			break
	return body

def resumedownload(HOST,PORT,PATH):
	clientSocket = soc.socket(soc.AF_INET, soc.SOCK_STREAM)
	clientSocket.connect((HOST,PORT))
	#header = downloadrqt(HOST,PATH)	
	#clientSocket.send(header)

	return 0


if len(sys.argv) ==4 and sys.argv[1]== "-o":
	if "https" in sys.argv[-1]:
		print "Sorry we don't support https"	
		sys.exit(2)
	parseSTR = urlparse(sys.argv[-1])
	if parseSTR.port == None: PORT = 80
	else: PORT = parseSTR.port
	fileName=sys.argv[2]
	Name,extension= fileName.split(".")
	HOST = parseSTR.hostname
	PATH = parseSTR.path
	if PATH=="" or PATH== None:
		PATH="/"
	if os.path.isfile(fileName):
		text=resumedownload(HOST,PORT,PATH)
	else:	
		text=downloadpls(HOST,PORT,PATH)
	with open(fileName, "wb+") as file:
		file.write(text)
	
